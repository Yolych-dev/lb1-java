package All;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.concurrent.TimeUnit;

class All {
    private static CharSequence strUserResponse;

    public static void main(String[] args) throws ParseException {

        System.out.println("Task25:" + exercise25("31.01.21"));
        System.out.println("Task4:" + Arrays.toString(exercise4(new int[]{1, 2, 3, 4, 5}, 2)));
        System.out.println("Task12:" + Arrays.toString(exercise12(new int[]{3, 6, -1, -3, 11, 4, 0})));
        System.out.println("Task3:" + Arrays.toString(exercise3(new int[]{1, 2, 3, 4, 5}, 100, 1)));
        System.out.println("Task20:" +exercise20("Привіт"));


    }

    //(4)Створіть метод, який дозволяє видаляти будь який елемент по індексу
    //в одновимірному масиві int[] Новий масив повинен повертатися з методу.
    public static int[] exercise4(int[] array, int index) {
        if (index > array.length || index < 0) {
            throw new ArrayIndexOutOfBoundsException();
        }

        var newArray = new int[array.length - 1];
        for (int i = 0; i < index; i++) {
            newArray[i] = array[i];
        }

        for (int i = index + 1; i < array.length; i++) {
            newArray[i - 1] = array[i];
        }
        return newArray;
    }

    //(25)Створіть метод, який приймає параметр String у форматі "11.01.21" та повертає кількість діб з
    // початку року до цієї дати.Ви повинні врахувати, що у лютому може бути різна кількість дат.
    public static long exercise25(String dateString) throws ParseException {

        var formatter = new SimpleDateFormat("dd.MM.yy");
        var date = formatter.parse(dateString);

        var beginOfYearString = "01.01." + LocalDate.now().getYear();
        var beginOfYear = formatter.parse(beginOfYearString);
        var difference = Math.abs(date.getTime() - beginOfYear.getTime());

        return TimeUnit.DAYS.convert(difference, TimeUnit.MILLISECONDS);
    }

    //(12)Створіть метод, який сортує будь який масив int[] методом вставок.
    public static int[] exercise12(int[] array) {
        if (array == null) {
            throw new NullPointerException();
        }
        for (int i = 0; i < array.length; i++) {
            int newArray = array[i];
            int j = i - 1;
            while (j >= 0 && array[j] > newArray) {
                array[j + 1] = array[j];
                j--;
            }
            array[j + 1] = newArray;
        }
        return array;
    }

    //(3)Створіть метод, який дозволяє вставляти в будь яку позицію масиву будь яке число.
    // Метод повинен повертати новий масив.
    public static int[] exercise3(int[] array, int element, int index) {
        if (index > array.length) {
            throw new ArrayIndexOutOfBoundsException();
        }
        int[] newArray = new int[array.length + 1];
        for (int i = 0; i < newArray.length; i++) {
            if (i < index) {
                newArray[i] = array[i];
            } else if (i == index) {
                newArray[index] = element;
            } else {
                newArray[i] = array[i - 1];
            }
        }
        return newArray;
    }


    //(20)Створіть метод, який може підрахувати кількість голосних букв
    // у будь якому слові (мова українська)
    public static int exercise20(String phrase) {

        String vowels = "іуаеиоя";

        int Counter = 0;
        for (char count : phrase.toCharArray()) {
            if (vowels.contains(String.valueOf(count))) {
                ++Counter;
            }

        }
        return Counter;
    }
}
